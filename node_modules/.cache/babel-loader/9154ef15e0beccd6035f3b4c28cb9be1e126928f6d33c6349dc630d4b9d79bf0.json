{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_bootcamp_component = _resolveComponent(\"bootcamp-component\");\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.bootcamps, bootcamp => {\n    return _openBlock(), _createBlock(_component_bootcamp_component, {\n      key: bootcamp.email,\n      name: bootcamp.name,\n      description: bootcamp.description,\n      phone: bootcamp.phone,\n      email: bootcamp.email,\n      website: bootcamp.website,\n      address: bootcamp.address,\n      onUpdateBootcamp: $options.updateBootcamp\n    }, null, 8 /* PROPS */, [\"name\", \"description\", \"phone\", \"email\", \"website\", \"address\", \"onUpdateBootcamp\"]);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","_ctx","bootcamps","bootcamp","_createBlock","_component_bootcamp_component","key","email","name","description","phone","website","address","onUpdateBootcamp","$options","updateBootcamp"],"sources":["C:\\Users\\mahomsi\\OneDrive - Capgemini\\Desktop\\my projects\\node\\formation node vue\\devcamper-front\\src\\components\\bootcamps\\AllBootcamps.vue"],"sourcesContent":["<template>\r\n  <bootcamp-component\r\n    v-for=\"bootcamp in bootcamps\"\r\n    :key=\"bootcamp.email\"\r\n    :name=\"bootcamp.name\"\r\n    :description=\"bootcamp.description\"\r\n    :phone=\"bootcamp.phone\"\r\n    :email=\"bootcamp.email\"\r\n    :website=\"bootcamp.website\"\r\n    :address=\"bootcamp.address\"\r\n    @update-bootcamp=\"updateBootcamp\"\r\n  ></bootcamp-component>\r\n</template>\r\n\r\n<script>\r\nimport BootcampComponent from './BootcampComponent.vue';\r\n\r\nexport default {\r\n  components: {\r\n    BootcampComponent,\r\n  },\r\n  inject: [bootcamps],\r\n  methods: {\r\n    updateBootcamp(email) {\r\n      console.log(email);\r\n      const bootcamp = this.bootcamps.find(\r\n        (bootcamp) => bootcamp.email === email\r\n      );\r\n      console.log(bootcamp);\r\n      alert(`your ${bootcamp.name} bootcamp has been updated successfully`);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;2BACEA,mBAAA,CAUsBC,SAAA,QAAAC,WAAA,CATDC,IAAA,CAAAC,SAAS,EAArBC,QAAQ;yBADjBC,YAAA,CAUsBC,6BAAA;MARnBC,GAAG,EAAEH,QAAQ,CAACI,KAAK;MACnBC,IAAI,EAAEL,QAAQ,CAACK,IAAI;MACnBC,WAAW,EAAEN,QAAQ,CAACM,WAAW;MACjCC,KAAK,EAAEP,QAAQ,CAACO,KAAK;MACrBH,KAAK,EAAEJ,QAAQ,CAACI,KAAK;MACrBI,OAAO,EAAER,QAAQ,CAACQ,OAAO;MACzBC,OAAO,EAAET,QAAQ,CAACS,OAAO;MACzBC,gBAAe,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}