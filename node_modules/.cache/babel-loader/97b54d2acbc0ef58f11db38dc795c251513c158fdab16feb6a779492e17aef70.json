{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_base_button = _resolveComponent(\"base-button\");\n  const _component_base_card = _resolveComponent(\"base-card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_base_card, null, {\n    default: _withCtx(() => [_createVNode(_component_base_button, {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.setSelectedTab('all-bootcamps')),\n      mode: _ctx.allBootcampsBtnMode\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Bootcamps\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"mode\"]), _createVNode(_component_base_button, {\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.setSelectedTab('add-bootcamp')),\n      mode: _ctx.addBootcampBtnMode\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Add a bootcamp\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"mode\"])]),\n    _: 1 /* STABLE */\n  }), (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.selectedTab)))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_base_card","_component_base_button","onClick","_cache","$event","_ctx","setSelectedTab","mode","allBootcampsBtnMode","addBootcampBtnMode","_createBlock","_resolveDynamicComponent","selectedTab"],"sources":["C:\\Users\\mahomsi\\OneDrive - Capgemini\\Desktop\\my projects\\node\\formation node vue\\devcamper-front\\src\\components\\bootcamps\\TheBootcamps.vue"],"sourcesContent":["<template>\r\n  <base-card>\r\n    <base-button\r\n      @click=\"setSelectedTab('all-bootcamps')\"\r\n      :mode=\"allBootcampsBtnMode\"\r\n      >Bootcamps</base-button\r\n    >\r\n    <base-button\r\n      @click=\"setSelectedTab('add-bootcamp')\"\r\n      :mode=\"addBootcampBtnMode\"\r\n      >Add a bootcamp</base-button\r\n    >\r\n  </base-card>\r\n  <component :is=\"selectedTab\"></component>\r\n</template>\r\n\r\n<script>\r\nimport AllBootcamps from './AllBootcamps.vue';\r\nimport AddBootcamp from './AddBootcamp.vue';\r\n\r\nexport default {\r\n  components: {\r\n    AllBootcamps,\r\n    AddBootcamp,\r\n  },\r\n  data() {\r\n    return {\r\n      selectedTab: '',\r\n      bootcamps: [\r\n        {\r\n          name: '',\r\n          description: '',\r\n          website: '',\r\n          phone: '',\r\n          email: ''\r\n        }\r\n      ],\r\n    };\r\n  },\r\n  provide() {\r\n    return {\r\n      bootcamps: this.bootcamps,\r\n      addNewBootcamp: this.addNewBootcamp\r\n    };\r\n  },\r\n  computed: {\r\n    allBootcampsBtnMode() {\r\n      return this.selectedTab === 'all-bootcamps' ? 'selected' : null;\r\n    },\r\n    addBootcampBtnMode() {\r\n      return this.selectedTab === 'add-bootcamp' ? 'selected' : null;\r\n    },\r\n  },\r\n  methods: {\r\n    setSelectedTab(tab) {\r\n      this.selectedTab = tab;\r\n    },\r\n    addNewBootcamp(name, description, website, phone, email) {\r\n      const newBootcamp = {\r\n        id: new Date().toISOString(),\r\n        name: name,\r\n          description: description,\r\n          website: '',\r\n          phone: '',\r\n          email: ''\r\n        }\r\n      }\r\n      this.bootcamps.push(newBootcamp);\r\n      this.selectedTab = 'all-bootcamps';\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;6DACEA,YAAA,CAWYC,oBAAA;sBAVV,MAIC,CAJDD,YAAA,CAICE,sBAAA;MAHEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,cAAc;MACrBC,IAAI,EAAEF,IAAA,CAAAG;;wBACN,MAAS,C,iBAAT,WAAS,E;;iCAEZT,YAAA,CAICE,sBAAA;MAHEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,cAAc;MACrBC,IAAI,EAAEF,IAAA,CAAAI;;wBACN,MAAc,C,iBAAd,gBAAc,E;;;;qBAGnBC,YAAA,CAAyCC,wBAAA,CAAzBN,IAAA,CAAAO,WAAW,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}